name: Deploy BrightOne to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "."
          target: "/home/brightone/website"
          strip_components: 1

      - name: SSH and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e  # Exit on any error
            
            cd /home/brightone/website
            
            echo "üîç Debugging environment variables..."
            echo "DB_PASSWORD length: $(echo '${{ secrets.DB_PASSWORD }}' | wc -c)"
            echo "GOOGLE_MAPS_API_KEY length: $(echo '${{ secrets.GOOGLE_MAPS_API_KEY }}' | wc -c)"
            echo "NEXTAUTH_SECRET length: $(echo '${{ secrets.NEXTAUTH_SECRET }}' | wc -c)"
            
            echo "üìù Creating .env file..."
            # Create .env file for Docker Compose
            cat > .env << 'EOF'
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=https://brightone.ca
            EOF
            
            echo "üìã Verifying .env file content:"
            cat .env
            
            echo "üê≥ Setting up Docker..."
            sudo systemctl start docker || true
            sudo systemctl enable docker || true
            sudo usermod -aG docker $USER || true
            sleep 10
            
            echo " Stopping existing containers..."
            sudo docker-compose -f docker-compose.prod.yml down || true
            
            echo "üßπ Cleaning up..."
            sudo docker system prune -f || true
            
            echo "üèóÔ∏è Building and starting services..."
            # Build and start services
            sudo docker-compose -f docker-compose.prod.yml build --no-cache
            sudo docker-compose -f docker-compose.prod.yml up -d
            
            echo "‚è≥ Waiting for services to be healthy..."
            sleep 60
            
            echo "üìä Checking service status..."
            sudo docker-compose -f docker-compose.prod.yml ps
            
            echo "üîç Checking application health..."
            for i in {1..12}; do
              echo "Health check attempt $i/12..."
              if curl -f http://localhost:3000/api/admin/dashboard > /dev/null 2>&1; then
                echo "‚úÖ Application is healthy!"
                break
              fi
              if [ $i -eq 12 ]; then
                echo "‚ùå Application health check failed"
                echo "üìã Container logs:"
                sudo docker-compose -f docker-compose.prod.yml logs app
                exit 1
              fi
              echo "Application not ready yet, waiting 10 seconds..."
              sleep 10
            done
            
            echo "‚úÖ Deployment completed successfully!"
